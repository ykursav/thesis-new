Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 179.104 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1407       254759    181.1      0.1      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1407    121625902  86443.4     67.9      points = get_contour(5)
    52      1407     16267631  11561.9      9.1      check = get_perspective(points, 0)
    53      1407        15078     10.7      0.0      if check == 10:
    54                                                   counter -= 1
    55                                                   return
    56      1407         6455      4.6      0.0      elif check == 20:
    57         7         4729    675.6      0.0          logging.debug("Too small detection probably wrong")
    58         7           43      6.1      0.0          counter -= 1
    59         7           27      3.9      0.0          return
    60      1400       818108    584.4      0.5      crop = get_cropped()
    61      1400        30097     21.5      0.0      sig = bitarray()
    62      1400        41428     29.6      0.0      set_initials(16, 8, 128, crop)
    63      1400         6323      4.5      0.0      try:
    64      1400     39779702  28414.1     22.2          sig = get_signature()
    65      1400        13322      9.5      0.0          if counter < 50:
    66        50          646     12.9      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       188095    139.3      0.1             sigGen = sigGen[72:]
    69      1350        22870     16.9      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6493      4.6      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22611     16.7      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 25.1179 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1407      2317815   1647.3      9.2      gray = gray_image(image)
    61                                               #blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1407     22783635  16193.1     90.7      th = adaptiveThreshold(gray, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, lower, upper)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(th, ones((3,3), uint8),iterations = 1)
    80      1407        16435     11.7      0.1      return th

Total time: 98.5423 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1407     25217718  17923.0     25.6      edged = get_edged(G)
   102      1407     13502073   9596.4     13.7      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1407        17315     12.3      0.0      approx = 0
   104      1407         6813      4.8      0.0      first = False
   105      1407         5588      4.0      0.0      no_contour = True
   106      1407         4960      3.5      0.0      last_cnt = 0
   107   1093253      4177889      3.8      4.2      for cnt in contours:
   108   1091846     10491328      9.6     10.6          epsilon = 0.05 * arcLength(cnt, True)
   109   1091846     26610198     24.4     27.0          new_approx = approxPolyDP(cnt, epsilon, True)
   110   1091846      4756082      4.4      4.8          if first == False:
   111      9478        87688      9.3      0.1              if check_points(new_approx):
   112      1407         5315      3.8      0.0                  last_cnt = cnt
   113      1407        35729     25.4      0.0                  approx = approxPolyDP(cnt, epsilon, True)
   114      1407         5978      4.2      0.0                  first = True
   115      1407         5568      4.0      0.0                  no_contour = False
   116   1082368      8365520      7.7      8.5          elif check_points(new_approx):
   117    349261      5158422     14.8      5.2              if (contourArea(last_cnt) < contourArea(cnt)):
   118      9327        37163      4.0      0.0                  last_cnt = cnt
   119      9327        39852      4.3      0.0                  approx = new_approx
   120                                                           
   121      1407         6229      4.4      0.0      if first == False:
   122                                                   return -1
   123                                               else:
   124      1407         4826      3.4      0.0          return approx

