Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 142.123 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1410       255417    181.1      0.2      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1410     86602624  61420.3     60.9      points = get_contour(7)
    52      1410     14996635  10635.9     10.6      check = get_perspective(points, 0)
    53      1410        14939     10.6      0.0      if check == 10:
    54                                                   counter -= 1
    55                                                   return
    56      1410         6309      4.5      0.0      elif check == 20:
    57        10         6374    637.4      0.0          logging.debug("Too small detection probably wrong")
    58        10           64      6.4      0.0          counter -= 1
    59        10           37      3.7      0.0          return
    60      1400       814992    582.1      0.6      crop = get_cropped()
    61      1400        28811     20.6      0.0      sig = bitarray()
    62      1400        42048     30.0      0.0      set_initials(16, 8, 128, crop)
    63      1400         6086      4.3      0.0      try:
    64      1400     39095120  27925.1     27.5          sig = get_signature()
    65      1400        13397      9.6      0.0          if counter < 50:
    66        50          633     12.7      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       187695    139.0      0.1             sigGen = sigGen[72:]
    69      1350        23263     17.2      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6500      4.6      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22323     16.5      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 36.4094 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1410      1744228   1237.0      4.8      gray = gray_image(image)
    61      1410     12001138   8511.4     33.0      blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1410     22647431  16062.0     62.2      th = adaptiveThreshold(blur, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, lower, upper)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(th, ones((3,3), uint8),iterations = 1)
    80      1410        16642     11.8      0.0      return th

Total time: 74.9277 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1410     36521473  25901.8     48.7      edged = get_edged(G)
   102      1410      8108626   5750.8     10.8      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1410        16168     11.5      0.0      approx = 0
   104      1410         6671      4.7      0.0      first = False
   105      1410         5639      4.0      0.0      no_contour = True
   106      1410         4970      3.5      0.0      last_cnt = 0
   107    542914      2043050      3.8      2.7      for cnt in contours:
   108    541504      5087325      9.4      6.8          epsilon = 0.05 * arcLength(cnt, True)
   109    541504     13740632     25.4     18.3          new_approx = approxPolyDP(cnt, epsilon, True)
   110    541504      2316454      4.3      3.1          if first == False:
   111      8598        79711      9.3      0.1              if check_points(new_approx):
   112      1410         5306      3.8      0.0                  last_cnt = cnt
   113      1410        38128     27.0      0.1                  approx = approxPolyDP(cnt, epsilon, True)
   114      1410         5690      4.0      0.0                  first = True
   115      1410         6418      4.6      0.0                  no_contour = False
   116    532906      4066831      7.6      5.4          elif check_points(new_approx):
   117    190710      2795676     14.7      3.7              if (contourArea(last_cnt) < contourArea(cnt)):
   118      8497        33279      3.9      0.0                  last_cnt = cnt
   119      8497        35351      4.2      0.0                  approx = new_approx
   120                                                           
   121      1410         5507      3.9      0.0      if first == False:
   122                                                   return -1
   123                                               else:
   124      1410         4810      3.4      0.0          return approx

