Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 228.785 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1440       267773    186.0      0.1      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1440    171254849 118927.0     74.9      points = get_contour(5)
    52      1440     16697883  11595.8      7.3      check = get_perspective(points, 0)
    53      1440        15207     10.6      0.0      if check == 10:
    54                                                   counter -= 1
    55                                                   return
    56      1440         6429      4.5      0.0      elif check == 20:
    57        40        33380    834.5      0.0          logging.debug("Too small detection probably wrong")
    58        40          258      6.5      0.0          counter -= 1
    59        40          154      3.9      0.0          return
    60      1400       815097    582.2      0.4      crop = get_cropped()
    61      1400        27366     19.5      0.0      sig = bitarray()
    62      1400        40316     28.8      0.0      set_initials(16, 8, 128, crop)
    63      1400         6181      4.4      0.0      try:
    64      1400     39367994  28120.0     17.2          sig = get_signature()
    65      1400        13581      9.7      0.0          if counter < 50:
    66        50          651     13.0      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       186711    138.3      0.1             sigGen = sigGen[72:]
    69      1350        22917     17.0      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6401      4.6      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22138     16.4      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 31.1055 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1440      2804366   1947.5      9.0      gray = gray_image(image)
    61      1440      5424693   3767.1     17.4      blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1440     22859474  15874.6     73.5      th = adaptiveThreshold(blur, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, lower, upper)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(th, ones((3,3), uint8),iterations = 1)
    80      1440        16961     11.8      0.1      return th

Total time: 136.741 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1440     31218960  21679.8     22.8      edged = get_edged(G)
   102      1440     18297937  12706.9     13.4      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1440        18123     12.6      0.0      approx = 0
   104      1440         6928      4.8      0.0      first = False
   105      1440         5596      3.9      0.0      no_contour = True
   106      1440         5005      3.5      0.0      last_cnt = 0
   107   1671411      6174310      3.7      4.5      for cnt in contours:
   108   1669971     15035177      9.0     11.0          epsilon = 0.05 * arcLength(cnt, True)
   109   1669971     38717124     23.2     28.3          new_approx = approxPolyDP(cnt, epsilon, True)
   110   1669971      7045824      4.2      5.2          if first == False:
   111      7519        71302      9.5      0.1              if check_points(new_approx):
   112      1440         5290      3.7      0.0                  last_cnt = cnt
   113      1440        31256     21.7      0.0                  approx = approxPolyDP(cnt, epsilon, True)
   114      1440         5793      4.0      0.0                  first = True
   115      1440         5627      3.9      0.0                  no_contour = False
   116   1662452     12497627      7.5      9.1          elif check_points(new_approx):
   117    444905      7497738     16.9      5.5              if (contourArea(last_cnt) < contourArea(cnt)):
   118     11413        43897      3.8      0.0                  last_cnt = cnt
   119     11413        46806      4.1      0.0                  approx = new_approx
   120                                                           
   121      1440         5517      3.8      0.0      if first == False:
   122                                                   return -1
   123                                               else:
   124      1440         4980      3.5      0.0          return approx

