Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 102.617 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1424       268890    188.8      0.3      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1424     45653730  32060.2     44.5      points = get_contour(3)
    52      1424     15738195  11052.1     15.3      check = get_perspective(points, 0)
    53      1424        14977     10.5      0.0      if check == 10:
    54         6           32      5.3      0.0          counter -= 1
    55         6           22      3.7      0.0          return
    56      1418         6440      4.5      0.0      elif check == 20:
    57        18        14102    783.4      0.0          logging.debug("Too small detection probably wrong")
    58        18          119      6.6      0.0          counter -= 1
    59        18           70      3.9      0.0          return
    60      1400       839115    599.4      0.8      crop = get_cropped()
    61      1400        29685     21.2      0.0      sig = bitarray()
    62      1400        42175     30.1      0.0      set_initials(16, 8, 128, crop)
    63      1400         6281      4.5      0.0      try:
    64      1400     39746435  28390.3     38.7          sig = get_signature()
    65      1400        13394      9.6      0.0          if counter < 50:
    66        50          649     13.0      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       190117    140.8      0.2             sigGen = sigGen[72:]
    69      1350        23400     17.3      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6611      4.7      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22739     16.8      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 29.231 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1424      2031310   1426.5      6.9      gray = gray_image(image)
    61      1424      3972461   2789.6     13.6      blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1424     23210627  16299.6     79.4      th = adaptiveThreshold(blur, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = threshold(blur,0,255,THRESH_BINARY+THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, ret / 2, ret)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(edge, ones((3,3), uint8),iterations = 1)
    80      1424        16637     11.7      0.1      return th

Total time: 45.3109 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1424     29344482  20607.1     64.8      edged = get_edged(G)
   102      1424     10332307   7255.8     22.8      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1424      4264160   2994.5      9.4      contours = sorted(contours, key = contourArea, reverse = True)[:5]
   104      1424        12033      8.5      0.0      approx = 0
   105      1424         6777      4.8      0.0      first = False
   106      1424         5816      4.1      0.0      no_contour = True
   107      1424         5397      3.8      0.0      last_cnt = 0
   108      8544        39166      4.6      0.1      for cnt in contours:
   109      7120       265396     37.3      0.6          epsilon = 0.05 * arcLength(cnt, True)
   110      7120       770583    108.2      1.7          new_approx = approxPolyDP(cnt, epsilon, True)
   111      7120        35866      5.0      0.1          if first == False:
   112      1494        23165     15.5      0.1              if check_points(new_approx):
   113      1418         5744      4.1      0.0                  last_cnt = cnt
   114      1418        77315     54.5      0.2                  approx = approxPolyDP(cnt, epsilon, True)
   115      1418         6374      4.5      0.0                  first = True
   116      1418         6385      4.5      0.0                  no_contour = False
   117      5626        47328      8.4      0.1          elif check_points(new_approx):
   118      1502        51414     34.2      0.1              if (contourArea(last_cnt) < contourArea(cnt)):
   119                                                           last_cnt = cnt
   120                                                           approx = new_approx
   121                                                           
   122      1424         5965      4.2      0.0      if first == False:
   123         6           20      3.3      0.0          return -1
   124                                               else:
   125      1418         5251      3.7      0.0          return approx

