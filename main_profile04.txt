Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 141.478 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1432       264043    184.4      0.2      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1432     84963020  59331.7     60.1      points = get_contour(5)
    52      1432     15786989  11024.4     11.2      check = get_perspective(points, 0)
    53      1432        14681     10.3      0.0      if check == 10:
    54                                                   counter -= 1
    55                                                   return
    56      1432         6287      4.4      0.0      elif check == 20:
    57        32        25846    807.7      0.0          logging.debug("Too small detection probably wrong")
    58        32          204      6.4      0.0          counter -= 1
    59        32          124      3.9      0.0          return
    60      1400       783007    559.3      0.6      crop = get_cropped()
    61      1400        27183     19.4      0.0      sig = bitarray()
    62      1400        40438     28.9      0.0      set_initials(16, 8, 128, crop)
    63      1400         6019      4.3      0.0      try:
    64      1400     39301163  28072.3     27.8          sig = get_signature()
    65      1400        13616      9.7      0.0          if counter < 50:
    66        50          631     12.6      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       189990    140.7      0.1             sigGen = sigGen[72:]
    69      1350        25884     19.2      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6541      4.7      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22546     16.7      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 30.7851 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1432      2239698   1564.0      7.3      gray = gray_image(image)
    61      1432      5489547   3833.5     17.8      blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1432     23039086  16088.7     74.8      th = adaptiveThreshold(blur, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, lower, upper)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(th, ones((3,3), uint8),iterations = 1)
    80      1432        16783     11.7      0.1      return th

Total time: 72.5536 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1432     30896584  21575.8     42.6      edged = get_edged(G)
   102      1432      8997492   6283.2     12.4      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1432        16601     11.6      0.0      approx = 0
   104      1432         6710      4.7      0.0      first = False
   105      1432         5577      3.9      0.0      no_contour = True
   106      1432         4851      3.4      0.0      last_cnt = 0
   107    589186      2181899      3.7      3.0      for cnt in contours:
   108    587754      5605303      9.5      7.7          epsilon = 0.05 * arcLength(cnt, True)
   109    587754     14836390     25.2     20.4          new_approx = approxPolyDP(cnt, epsilon, True)
   110    587754      2524825      4.3      3.5          if first == False:
   111      5825        55998      9.6      0.1              if check_points(new_approx):
   112      1432         5209      3.6      0.0                  last_cnt = cnt
   113      1432        34817     24.3      0.0                  approx = approxPolyDP(cnt, epsilon, True)
   114      1432         5847      4.1      0.0                  first = True
   115      1432         5618      3.9      0.0                  no_contour = False
   116    581929      4360853      7.5      6.0          elif check_points(new_approx):
   117    192694      2919889     15.2      4.0              if (contourArea(last_cnt) < contourArea(cnt)):
   118      9958        38706      3.9      0.1                  last_cnt = cnt
   119      9958        40167      4.0      0.1                  approx = new_approx
   120                                                           
   121      1432         5488      3.8      0.0      if first == False:
   122                                                   return -1
   123                                               else:
   124      1432         4802      3.4      0.0          return approx

