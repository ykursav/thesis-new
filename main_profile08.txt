Wrote profile results to mainproc.py.lprof
Timer unit: 1e-06 s

Total time: 142.431 s
File: mainproc.py
Function: initialize_set at line 46

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    46                                           @profile
    47                                           def initialize_set(image):
    48                                               global counter, sigGen
    49      1411       258974    183.5      0.2      set_initials_pre(128, image, counter, out2)
    50                                               #set_initials_pre(128, image, counter)
    51      1411     86082228  61008.0     60.4      points = get_contour(7)
    52      1411     15352318  10880.5     10.8      check = get_perspective(points, 0)
    53      1411        14642     10.4      0.0      if check == 10:
    54                                                   counter -= 1
    55                                                   return
    56      1411         6326      4.5      0.0      elif check == 20:
    57        11         8822    802.0      0.0          logging.debug("Too small detection probably wrong")
    58        11           71      6.5      0.0          counter -= 1
    59        11           41      3.7      0.0          return
    60      1400       803441    573.9      0.6      crop = get_cropped()
    61      1400        28041     20.0      0.0      sig = bitarray()
    62      1400        40656     29.0      0.0      set_initials(16, 8, 128, crop)
    63      1400         6408      4.6      0.0      try:
    64      1400     39574618  28267.6     27.8          sig = get_signature()
    65      1400        13165      9.4      0.0          if counter < 50:
    66        50          648     13.0      0.0             sigGen.extend(sig)
    67                                                   else:
    68      1350       188375    139.5      0.1             sigGen = sigGen[72:]
    69      1350        22860     16.9      0.0             sigGen[3528:] = sig
    70                                               except:
    71                                                   logging.debug("Nonetype")
    72                                                   counter -= 1
    73                                                   return
    74      1400         6486      4.6      0.0      if counter >= 49:
    75                                                   #logging.debug(sigGen)
    76      1351        22672     16.8      0.0          set_initials_match(sigGen, 24, 38, 4, 28, 22)

Total time: 36.6659 s
File: preprocessing.py
Function: get_edged at line 57

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    57                                           @profile
    58                                           def get_edged(G):
    59                                               global out
    60      1411      1935080   1371.4      5.3      gray = gray_image(image)
    61      1411     12002303   8506.2     32.7      blur = get_blurred(gray, G)
    62                                               #v = median(gray)
    63                                               #lower = int(max(0, (1.0 - 0.33) * v))
    64                                               #upper = int(max(255, (1.0 + 0.33) * v))
    65      1411     22712000  16096.4     61.9      th = adaptiveThreshold(blur, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY_INV, 11, 1)
    66                                               #ret, th = threshold(blur, lower, upper, THRESH_BINARY)
    67                                               #ret ,th2 = cv2.threshold(blur,0,255,cv2.THRESH_BINARY+cv2.THRESH_OTSU)
    68                                               # cv2.imwrite("Adaptive.jpg", th)
    69                                           ##        cv2.imshow("th", dilation)
    70                                           ##        cv2.waitKey(0)
    71                                           ##        cv2.destroyAllWindows()
    72                                               #imwrite("OTSU/otsu" + str(counter_warped) + ".jpg", th)
    73                                               #print get_width_height(th)
    74                                               #out.write(cvtColor(th, COLOR_GRAY2BGR))
    75                                               #dilated = dilate(th, ones((3,3), uint8),iterations = 1)
    76                                               #dilated = dilate(th, ones((3, 3), uint8), iterations = 1)
    77                                               #edge = Canny(blur, lower, upper)
    78                                               #Thread(target = write_out, args = (out, dilated,)).start()
    79                                               #return dilate(th, ones((3,3), uint8),iterations = 1)
    80      1411        16526     11.7      0.0      return th

Total time: 74.7058 s
File: preprocessing.py
Function: get_contour at line 99

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    99                                           @profile
   100                                           def get_contour(G):
   101      1411     36779175  26066.0     49.2      edged = get_edged(G)
   102      1411      8072343   5721.0     10.8      __, contours, hierarchy = findContours(edged, RETR_LIST, CHAIN_APPROX_SIMPLE)
   103      1411        15760     11.2      0.0      approx = 0
   104      1411         6766      4.8      0.0      first = False
   105      1411         5690      4.0      0.0      no_contour = True
   106      1411         4883      3.5      0.0      last_cnt = 0
   107    525333      2026265      3.9      2.7      for cnt in contours:
   108    523922      5032635      9.6      6.7          epsilon = 0.05 * arcLength(cnt, True)
   109    523922     13321731     25.4     17.8          new_approx = approxPolyDP(cnt, epsilon, True)
   110    523922      2290288      4.4      3.1          if first == False:
   111      8593        78921      9.2      0.1              if check_points(new_approx):
   112      1411         5325      3.8      0.0                  last_cnt = cnt
   113      1411        33385     23.7      0.0                  approx = approxPolyDP(cnt, epsilon, True)
   114      1411         5801      4.1      0.0                  first = True
   115      1411         5650      4.0      0.0                  no_contour = False
   116    515329      3979767      7.7      5.3          elif check_points(new_approx):
   117    185740      2971010     16.0      4.0              if (contourArea(last_cnt) < contourArea(cnt)):
   118      7173        28828      4.0      0.0                  last_cnt = cnt
   119      7173        31158      4.3      0.0                  approx = new_approx
   120                                                           
   121      1411         5521      3.9      0.0      if first == False:
   122                                                   return -1
   123                                               else:
   124      1411         4914      3.5      0.0          return approx

